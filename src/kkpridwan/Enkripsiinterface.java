/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kkpridwan;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.OutputStream;

import java.nio.charset.StandardCharsets;
import java.sql.Connection;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author user
 */
public class Enkripsiinterface extends javax.swing.JInternalFrame {

    int waktumulai = 0;
    String stripen = "Enkrip";
    String tujuan = "tujuan";
    String username;

    /**
     * Creates new form Enkripsiinterface
     */
    public Enkripsiinterface() {
        initComponents();
        setTanggal();

        setJam();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtfile = new javax.swing.JTextField();
        txtpass = new javax.swing.JPasswordField();
        jButton2 = new javax.swing.JButton();
        lbl_tanggal = new javax.swing.JLabel();
        lbl_jam = new javax.swing.JLabel();

        setOpaque(true);
        setPreferredSize(new java.awt.Dimension(801, 600));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setText("Enkripsi");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Pilih Dokumen");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Password");

        txtfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfileActionPerformed(evt);
            }
        });

        txtpass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpassActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Encrypt");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtpass, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtfile, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton1))
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(lbl_tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_jam, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(127, 127, 127))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(313, 313, 313))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jButton1))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtpass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addGap(119, 119, 119)
                .addComponent(lbl_jam)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_tanggal))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String current = "";
        JFileChooser jfc = null;
        try {
            jfc = new JFileChooser(current);
            jfc.setDialogTitle("Pilih File");
        } catch (Exception e) {
        }
        FileFilter docFilter, docxFilter, xlsFilter, xlsxFilter, txtFilter, pdfFilter, allFilter;
        docFilter = new FileNameExtensionFilter("Word 97-2003 Document (*.doc)", "doc");
        docxFilter = new FileNameExtensionFilter("Word Document (*.docx)", "docx");
        xlsFilter = new FileNameExtensionFilter("Excel 97-2003 Document (*.xls)", "xls");
        xlsxFilter = new FileNameExtensionFilter("Excel Document (*.xlsx)", "xlsx");
        txtFilter = new FileNameExtensionFilter("Text Document (*.txt)", "txt");
        pdfFilter = new FileNameExtensionFilter("PDF Document (*.pdf)", "pdf");
        allFilter = new FileNameExtensionFilter("All of Document (*.doc, *.docx, *.xls, *.xlsx, *.txt, *.pdf)", "doc", "docx", "xls", "xlsx", "txt", "pdf");
        jfc.setAcceptAllFileFilterUsed(false);
        jfc.addChoosableFileFilter(docFilter);
        jfc.addChoosableFileFilter(docxFilter);
        jfc.addChoosableFileFilter(xlsFilter);
        jfc.addChoosableFileFilter(xlsxFilter);
        jfc.addChoosableFileFilter(txtFilter);
        jfc.addChoosableFileFilter(pdfFilter);
        jfc.addChoosableFileFilter(allFilter);
        if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            String f = jfc.getSelectedFile().toString();
            txtfile.setText(f);
        } else {
            jfc.hide();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        process();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfileActionPerformed

    private void txtpassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpassActionPerformed

    public void setTanggal() {
        java.util.Date skrg = new java.util.Date();
        java.text.SimpleDateFormat kal = new java.text.SimpleDateFormat("yyyy-MM-dd");
        lbl_tanggal.setText(kal.format(skrg));
    }

    public void username(String user) {
        username = user;
    }

//untuk perintah penampilan tanggal
    public void setJam() {
        ActionListener taskPerformer = new ActionListener() {

            public void actionPerformed(ActionEvent evt) {
                String nol_jam = "", nol_menit = "", nol_detik = "";

                java.util.Date dateTime = new java.util.Date();
                int nilai_jam = dateTime.getHours();
                int nilai_menit = dateTime.getMinutes();
                int nilai_detik = dateTime.getSeconds();

                if (nilai_jam <= 9) {
                    nol_jam = "0";
                }
                if (nilai_menit <= 9) {
                    nol_menit = "0";
                }
                if (nilai_detik <= 9) {
                    nol_detik = "0";
                }

                String waktu = nol_jam + Integer.toString(nilai_jam);
                String menit = nol_menit + Integer.toString(nilai_menit);
                String detik = nol_detik + Integer.toString(nilai_detik);

                lbl_jam.setText(waktu + ":" + menit + ":" + detik + "");
            }
        };
        new Timer(1000, taskPerformer).start();
    }

    public void process() {

        try {
            if (txtfile.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "File Belum Di Pilih");
                txtfile.requestFocus();
            } else if (txtpass.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Silahkan Masukkan Password!");
                txtpass.requestFocus();
            } else if (txtpass.getText().length() < 8) {
                JOptionPane.showMessageDialog(this, "Masukkan 8 Karakter");
                txtpass.requestFocus();
            } else if (txtpass.getText().length() > 15) {
                JOptionPane.showMessageDialog(this, "Password Maksimal 15 Karakter");
                txtpass.requestFocus();
            } else {
                long start = System.currentTimeMillis();
                File file = new File(txtfile.getText());
                byte[] b = new byte[(int) file.length()];
                try {
                    FileInputStream fis = new FileInputStream(file);
                    fis.read(b);
                    fis.close();
                } catch (Exception exc) {
                }

                String password = txtpass.getText();
                RC4 rc4 = new RC4(password.getBytes());
                byte[] compress = Huffman.compress(b);
                byte[] enkrip = rc4.encrypt(compress);

                String f = file.getName().substring(3, file.getName().length());
                File fout = new File("en_" + file.getName());
                long now = System.currentTimeMillis();
                JFileChooser fileChooser = null;
                try {
                    fileChooser = new JFileChooser();
                    fileChooser.setSelectedFile(fout);
                    fileChooser.setDialogTitle("Save File Location");

                    if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                        boolean doExport = true;
                        boolean overrideExistingFile = false;

                        String dir = fileChooser.getCurrentDirectory().toString();
                        File destinationFile = new File(fileChooser.getSelectedFile().getName());
                        DataOutputStream out = new DataOutputStream(new FileOutputStream(dir + "/" + destinationFile));

                        out.write(enkrip);
                        out.close();

                        while (doExport && destinationFile.exists() && !overrideExistingFile) {

                            overrideExistingFile = (JOptionPane.showConfirmDialog(this, "Replace file?", "Export Settings", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION);

                            if (!overrideExistingFile) {
                                if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                                    destinationFile = new File(fileChooser.getSelectedFile().getAbsolutePath());
                                } else {
                                    doExport = false;
                                }
                            }
                        }
                        try {
                            Long size1 = file.length();
                            String size2 = size1.toString();
                            String lokasi = txtfile.getText();
                            String sumber = lokasi.replace("/", "-");

                            Double number = Double.parseDouble(size2);
                            Double kilo = number / 1024;
                            Koneksi objKon = new Koneksi();
                            Connection con = objKon.bukaKoneksi();
                            Statement st = con.createStatement();
                            String sql = "insert into log (jam,tgl,nm_file,size_file,cipherkey,jns_aksi,sumber,tujuan,username) values('" + lbl_jam.getText() + "','" + lbl_tanggal.getText() + "','"
                                    + file.getName() + "','" + kilo + "','" + txtpass.getText() + "','" + stripen + "','" + sumber + "','" + tujuan + "','" + username + "')";
                            int vHasil = st.executeUpdate(sql);
                            if (vHasil > 0) {
                                JOptionPane.showMessageDialog(this, "File " + file.getName() + " Berhasil Di Enkrip\nWaktu Enkrip : " + (now - start) / 1000.0 + " Detik");
                                txtfile.setText("");
                                txtpass.setText("");
                            }
                            st.close();
                            con.close();
                        } catch (Exception e) {
                            System.out.print(e.getMessage());
                        }

                    }
                } catch (Exception e) {
                    System.out.print(e.getMessage());
                }
            }
            txtfile.setText("");
            txtpass.setText("");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Format Dokumen Tidak Didukung");
            txtfile.setText("");
            txtpass.setText("");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lbl_jam;
    private javax.swing.JLabel lbl_tanggal;
    private javax.swing.JTextField txtfile;
    private javax.swing.JPasswordField txtpass;
    // End of variables declaration//GEN-END:variables
}
